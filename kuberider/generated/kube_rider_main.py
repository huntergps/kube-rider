# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'resources/ui/kube_rider_main.ui'
#
# Created by: PyQt5 UI code generator 5.12.1
#
# WARNING! All changes made in this file will be lost!

from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(871, 600)
        MainWindow.setUnifiedTitleAndToolBarOnMac(False)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.centralwidget)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.frame = QtWidgets.QFrame(self.splitter)
        self.frame.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame.setObjectName("frame")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.frame)
        self.verticalLayout.setSpacing(3)
        self.verticalLayout.setObjectName("verticalLayout")
        self.horizontalLayout_4 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_4.setObjectName("horizontalLayout_4")
        self.chk_watch = QtWidgets.QCheckBox(self.frame)
        self.chk_watch.setObjectName("chk_watch")
        self.horizontalLayout_4.addWidget(self.chk_watch)
        self.txt_watch_interval = QtWidgets.QSpinBox(self.frame)
        self.txt_watch_interval.setProperty("value", 5)
        self.txt_watch_interval.setObjectName("txt_watch_interval")
        self.horizontalLayout_4.addWidget(self.txt_watch_interval)
        self.label = QtWidgets.QLabel(self.frame)
        self.label.setObjectName("label")
        self.horizontalLayout_4.addWidget(self.label)
        spacerItem = QtWidgets.QSpacerItem(40, 20, QtWidgets.QSizePolicy.Expanding, QtWidgets.QSizePolicy.Minimum)
        self.horizontalLayout_4.addItem(spacerItem)
        self.btn_reload_pods = QtWidgets.QPushButton(self.frame)
        self.btn_reload_pods.setObjectName("btn_reload_pods")
        self.horizontalLayout_4.addWidget(self.btn_reload_pods)
        self.verticalLayout.addLayout(self.horizontalLayout_4)
        self.horizontalLayout_7 = QtWidgets.QHBoxLayout()
        self.horizontalLayout_7.setObjectName("horizontalLayout_7")
        self.txt_filter = QtWidgets.QLineEdit(self.frame)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.txt_filter.sizePolicy().hasHeightForWidth())
        self.txt_filter.setSizePolicy(sizePolicy)
        self.txt_filter.setObjectName("txt_filter")
        self.horizontalLayout_7.addWidget(self.txt_filter)
        self.btn_enable_filter = QtWidgets.QPushButton(self.frame)
        self.btn_enable_filter.setObjectName("btn_enable_filter")
        self.horizontalLayout_7.addWidget(self.btn_enable_filter)
        self.btn_clear_filter = QtWidgets.QPushButton(self.frame)
        self.btn_clear_filter.setObjectName("btn_clear_filter")
        self.horizontalLayout_7.addWidget(self.btn_clear_filter)
        self.verticalLayout.addLayout(self.horizontalLayout_7)
        self.lst_pods = QtWidgets.QListWidget(self.frame)
        self.lst_pods.setObjectName("lst_pods")
        self.verticalLayout.addWidget(self.lst_pods)
        self.frame_2 = QtWidgets.QFrame(self.splitter)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_2.sizePolicy().hasHeightForWidth())
        self.frame_2.setSizePolicy(sizePolicy)
        self.frame_2.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_2.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_2.setObjectName("frame_2")
        self.horizontalLayout_3 = QtWidgets.QHBoxLayout(self.frame_2)
        self.horizontalLayout_3.setContentsMargins(5, 5, 5, 5)
        self.horizontalLayout_3.setObjectName("horizontalLayout_3")
        self.splitter_2 = QtWidgets.QSplitter(self.frame_2)
        self.splitter_2.setOrientation(QtCore.Qt.Vertical)
        self.splitter_2.setObjectName("splitter_2")
        self.frame_3 = QtWidgets.QFrame(self.splitter_2)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(1)
        sizePolicy.setHeightForWidth(self.frame_3.sizePolicy().hasHeightForWidth())
        self.frame_3.setSizePolicy(sizePolicy)
        self.frame_3.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_3.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_3.setObjectName("frame_3")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.frame_3)
        self.horizontalLayout_2.setContentsMargins(5, 5, 5, 5)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.tabWidget = QtWidgets.QTabWidget(self.frame_3)
        self.tabWidget.setObjectName("tabWidget")
        self.tab_3 = QtWidgets.QWidget()
        self.tab_3.setObjectName("tab_3")
        self.horizontalLayout_6 = QtWidgets.QHBoxLayout(self.tab_3)
        self.horizontalLayout_6.setObjectName("horizontalLayout_6")
        self.lst_pod_containers = QtWidgets.QListWidget(self.tab_3)
        self.lst_pod_containers.setObjectName("lst_pod_containers")
        self.horizontalLayout_6.addWidget(self.lst_pod_containers)
        self.tabWidget.addTab(self.tab_3, "")
        self.tab = QtWidgets.QWidget()
        self.tab.setObjectName("tab")
        self.horizontalLayout_8 = QtWidgets.QHBoxLayout(self.tab)
        self.horizontalLayout_8.setObjectName("horizontalLayout_8")
        self.txt_pod_events = QtWidgets.QPlainTextEdit(self.tab)
        self.txt_pod_events.setObjectName("txt_pod_events")
        self.horizontalLayout_8.addWidget(self.txt_pod_events)
        self.tabWidget.addTab(self.tab, "")
        self.horizontalLayout_2.addWidget(self.tabWidget)
        self.frame_4 = QtWidgets.QFrame(self.splitter_2)
        self.frame_4.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_4.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_4.setObjectName("frame_4")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.frame_4)
        self.horizontalLayout.setContentsMargins(5, 5, 5, 5)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.console_text_edit = QtWidgets.QPlainTextEdit(self.frame_4)
        self.console_text_edit.setReadOnly(True)
        self.console_text_edit.setObjectName("console_text_edit")
        self.horizontalLayout.addWidget(self.console_text_edit)
        self.horizontalLayout_3.addWidget(self.splitter_2)
        self.horizontalLayout_5.addWidget(self.splitter)
        MainWindow.setCentralWidget(self.centralwidget)

        self.retranslateUi(MainWindow)
        self.tabWidget.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", ":::: KubeRider ::::"))
        self.chk_watch.setText(_translate("MainWindow", "Refresh every "))
        self.label.setText(_translate("MainWindow", "seconds"))
        self.btn_reload_pods.setText(_translate("MainWindow", "Reload"))
        self.txt_filter.setPlaceholderText(_translate("MainWindow", "Filter pods ..."))
        self.btn_enable_filter.setText(_translate("MainWindow", "Filter"))
        self.btn_clear_filter.setText(_translate("MainWindow", "Clear"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab_3), _translate("MainWindow", "Containers"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.tab), _translate("MainWindow", "Events"))


import resources_rc
